{"version":3,"sources":["components/ExpenseForm.js","components/ExpenseItem.js","components/ExpenseList.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","_ref","charge","handleCharge","amount","handleAmount","handleSumbit","edit","React","createElement","onSubmit","className","htmlFor","type","id","name","placeholder","value","onChange","ExpenseItem","expense","handleDelete","handleEdit","onClick","ExpenseList","expenses","clearItems","Fragment","map","key","length","Alert","text","concat","App","_useState","useState","_useState2","_slicedToArray","setCharge","_useState3","_useState4","setAmount","_useState5","_useState6","setExpenses","_useState7","show","_useState8","alert","setAlert","_useState9","_useState10","setEdit","_useState11","_useState12","setId","handleAlert","setTimeout","style","width","background","padding","e","target","valueAsNumber","preventDefault","newExpenses","item","_objectSpread","newExpense","crypto","randomUUID","_toConsumableArray","console","log","filter","find","display","justifyContent","marginTop","fontSize","reduce","acc","curr","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4d3d37bf.chunk.js","sourcesContent":["import React from 'react'\nimport \"./ExpenseForm.css\"\n\nconst ExpenseForm = ({charge, handleCharge, amount, handleAmount, handleSumbit, edit}) => {\n        return (\n            <form onSubmit={handleSumbit}>\n                <div className='form-center'>\n                    <div className='form-group'>\n                        <label htmlFor='expense'>지출 항목</label>\n                        <input\n                            type='text'\n                            className='form-control'                            \n                            id='charge'\n                            name='charge'\n                            placeholder='예) 렌트비'\n                            value={charge}\n                            onChange={handleCharge}\n                            />\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor='expense'>비용</label>\n                        <input\n                            type='number'\n                            className='form-control'                            \n                            id='amount'\n                            name='amount'\n                            placeholder='예) 100'\n                            value={amount}\n                            onChange={handleAmount}    \n                        />\n                    </div>\n                </div>\n                <button type='submit' className='btn'>\n                    {edit? \"수정\" : \"제출\"}\n                </button>\n            </form>\n        )\n}\n\nexport default ExpenseForm","import React from 'react'\nimport \"./ExpenseItem.css\"\n\nconst ExpenseItem = ({expense, handleDelete, handleEdit}) => {\n        return (\n            <li className='item'>\n                <div className='info'>\n                    <span className='expense'>{expense.charge}</span>\n                    <span className='amount'>{expense.amount}원</span>\n                </div>\n                <div>\n                    <button\n                        className='edit-btn'\n                        onClick={() => handleEdit(expense.id)}\n                    >\n                        수정\n                    </button>\n                    <button\n                        className='clear-btn'\n                        onClick={() =>\n                            handleDelete(expense.id)\n                        }\n                    >\n                        삭제\n                    </button>\n                </div>\n            </li>\n        )\n}\n\nexport default ExpenseItem","import React from 'react'\nimport ExpenseItem from './ExpenseItem'\nimport './ExpenseList.css'\n\nconst ExpenseList = ({expenses, handleDelete, handleEdit,clearItems}) => {\n        return (\n            <>\n                <ul className='list'>\n                    {expenses.map(expense => {\n                        return (\n                            <ExpenseItem\n                                expense={expense}\n                                key={expense.id}\n                                handleDelete={handleDelete}\n                                handleEdit={handleEdit}\n                            />\n                        )\n                    })}\n                </ul>\n                {expenses.length > 0 && (\n                    <button className='btn' onClick={clearItems}>\n                        목록 지우기\n                    </button>\n                )}\n            </>\n        )\n}\n\nexport default ExpenseList","import React from 'react'\nimport \"./Alert.css\"\n\nexport default function Alert({ type, text }) {\n    return (\n        <div className={`alert alert-${type}`}>\n            {text}\n        </div>\n    );\n};\n","import React, { useState } from 'react'\nimport ExpenseForm from './components/ExpenseForm'\nimport './App.css'\nimport ExpenseList from './components/ExpenseList'\nimport Alert from './components/Alert'\n\nconst App = () => {\n  \n  // 지출 항목\n  const [charge, setCharge] = useState(\"\");\n\n  // 비용\n  const [amount, setAmount] = useState(0);\n\n  const [expenses, setExpenses] = useState([\n    {\n      id: 1,\n      charge: \"렌트비\",\n      amount: 1600\n    },\n    {\n      id: 2,\n      charge: \"교통비\",\n      amount: 400\n    }\n  ]);\n  \n  // Alert를 위한 State\n  const [alert, setAlert] = useState({show: false});\n\n  // edit 수정을 위한 State\n  const [edit, setEdit] =useState(false);\n\n  const [id, setId] = useState(\"\");\n\n  const handleEdit = (id) => {\n    const expense = expenses.find(item => item.id === id);\n    // 구조 분해\n    const {charge, amount} = expense;\n    setCharge(charge);\n    setAmount(amount);\n    setEdit(true);\n    setId(id);\n  }\n\n  const handleDelete = (id) => {\n    const newExpenses = expenses.filter(expense =>\n      expense.id !== id\n    );\n    setExpenses(newExpenses);\n  };\n\n  const handleCharge = e => {\n    setCharge(e.target.value);\n  };\n\n  const handleAmount = e => {\n    let amount = e.target.valueAsNumber;\n    setAmount(amount);\n  };\n\n  const handleSumbit = e => {\n    e.preventDefault();\n    if (charge !== \"\" && amount > 0){\n      if (edit){\n        const newExpenses = expenses.map(item => {\n          return item.id === id ? {...item, charge, amount} : item;\n        });\n        setExpenses(newExpenses);\n        setEdit(false);\n        handleAlert({type: \"success\", text: \"아이템이 수정되었습니다.\"});\n      }else{\n        // id: 랜덤값 생성하는 메소드 인듯..?\n        const newExpense = {id: crypto.randomUUID(), charge, amount};\n        // expenses.push((newExpenses)); => 불변성 지키지 X\n        const newExpenses = [...expenses, newExpense];  // 배열을 복사하고 새로운 newExpenses 배열을 만듬\n        setExpenses(newExpenses);\n      }\n      setCharge(\"\");\n      setAmount(0);\n      handleAlert({type: \"success\", text: \"아이템이 생성되었습니다.\"});\n    }else{\n      console.log('error');\n      handleAlert({type: \"danger\", text: \"charge는 빈 값일 수도 있으며 amount 값은 0보다 커야 합니다.\"});\n    }\n  }\n  \n  const handleAlert = ({type, text}) => {\n    setAlert({show: true, type, text});\n    setTimeout(() => {\n      setTimeout({show: false});\n    }, 7000);\n  };\n\n  // 전체 지출항목 지우기\n  const clearItems = () => {\n    setExpenses([]);\n  };\n\n\n  return (\n    <div>\n      <main className='main-container'>\n        {alert.show ? <Alert type={alert.type} text={alert.text}/> : null}\n        <h1>예산 계산기</h1>\n\n        <div style={{ width: '100%', background: 'white', padding: '1rem' }}>\n          {/* ExpenseForm */}\n          <ExpenseForm \n            charge = {charge}\n            handleCharge = {handleCharge}\n            amount = {amount}\n            handleAmount = {handleAmount}\n            handleSumbit= {handleSumbit}\n            edit={edit}\n          />\n        </div>\n\n        <div style={{ width: '100%', background: 'white', padding: '1rem' }}>\n          {/* ExpenseList */}\n          <ExpenseList\n            expenses={expenses}\n            handleDelete={handleDelete}\n            handleEdit={handleEdit}\n            clearItems={clearItems}\n          />\n        </div>\n\n        <div style={{ display: 'flex', justifyContent: 'end', marginTop: '1rem' } }>\n          <p style={{ fontSize: '2rem' }}>\n            총지출 :\n            <span>\n              {expenses.reduce((acc, curr) => {\n                return (acc += curr.amount);\n              }, 0)}\n              원</span>\n          </p>\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}